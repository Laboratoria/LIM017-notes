{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/LIM017-notes/src/components/Login/LoginIn.js\";\n\n/*import React, { useState, useEffect } from \"react\";\nimport {firebaseApp} from \"../../firebase/connection.js\";\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nconst auth = getAuth(firebaseApp);\nfunction Login() {\n  const firestore = getFirestore(firebaseApp);\n  const [isRegistrando, setIsRegistrando] = useState(false);\n\n  async function registrarUsuario(email, password, rol) {\n    const infoUsuario = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    ).then((usuarioFirebase) => {\n      return usuarioFirebase;\n    });\n\n    console.log(\"Registro exitoso\");\n    const docuRef = doc(firestore, `usuarios/${infoUsuario.user.uid}`);\n    setDoc(docuRef, { correo: email, rol: rol });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const email = e.target.elements.email.value;\n    const password = e.target.elements.password.value;\n    const rol = e.target.elements.rol.value;\n    console.log(\"iniciaste secion\");\n\n    if (isRegistrando) {\n      // registrar\n      registrarUsuario(email, password, rol);\n    } else {\n      // login\n      signInWithEmailAndPassword(auth, email, password);\n    }\n  }\n  return (\n    <div>\n      <h1>{isRegistrando ? \"Regístrate\" : \"Inicia sesión\"}</h1>\n\n      <form onSubmit={submitHandler}>\n        <label>\n          Correo electrónico:\n          <input type=\"email\" id=\"email\" />\n        </label>\n\n        <label>\n          Contraseña:\n          <input type=\"password\" id=\"password\" />\n        </label>\n\n        <label>\n          Rol:\n          <select id=\"rol\">\n            <option value=\"admin\">Administrador</option>\n            <option value=\"user\">Usuario</option>\n          </select>\n        </label>\n\n        <input\n          type=\"submit\"\n          value={isRegistrando ? \"Registrar\" : \"Iniciar sesión\"}\n        />\n      </form>\n\n      <button onClick={() => setIsRegistrando(!isRegistrando)}>\n        {isRegistrando ? \"Ya tengo una cuenta\" : \"Quiero registrarme\"}\n      </button>\n    </div>\n\n  );\n}\nexport default Login;*/\nimport { auth } from './firebase';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validatePassword = () => {\n  let isValid = true;\n\n  if (password !== '' && confirmPassword !== '') {\n    if (password !== confirmPassword) {\n      isValid = false;\n      setError('Passwords does not match');\n    }\n  }\n\n  return isValid;\n};\n\nconst register = e => {\n  e.preventDefault();\n  setError('');\n\n  if (validatePassword()) {\n    // Create a new user with email and password using firebase\n    createUserWithEmailAndPassword(auth, email, password).then(res => {\n      console.log(res.user);\n    }).catch(err => setError(err.message));\n  }\n\n  setEmail('');\n  setPassword('');\n  setConfirmPassword('');\n};\n\n/*#__PURE__*/\n_jsxDEV(\"form\", {\n  onSubmit: register,\n  name: \"registration_form\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 111,\n  columnNumber: 1\n}, this);","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","validatePassword","isValid","password","confirmPassword","setError","register","e","preventDefault","email","then","res","console","log","user","catch","err","message","setEmail","setPassword","setConfirmPassword"],"sources":["/Users/mac/Documents/LIM017-notes/src/components/Login/LoginIn.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\nimport {firebaseApp} from \"../../firebase/connection.js\";\nimport { getFirestore, doc, setDoc } from \"firebase/firestore\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nconst auth = getAuth(firebaseApp);\nfunction Login() {\n  const firestore = getFirestore(firebaseApp);\n  const [isRegistrando, setIsRegistrando] = useState(false);\n\n  async function registrarUsuario(email, password, rol) {\n    const infoUsuario = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    ).then((usuarioFirebase) => {\n      return usuarioFirebase;\n    });\n\n    console.log(\"Registro exitoso\");\n    const docuRef = doc(firestore, `usuarios/${infoUsuario.user.uid}`);\n    setDoc(docuRef, { correo: email, rol: rol });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const email = e.target.elements.email.value;\n    const password = e.target.elements.password.value;\n    const rol = e.target.elements.rol.value;\n    console.log(\"iniciaste secion\");\n\n    if (isRegistrando) {\n      // registrar\n      registrarUsuario(email, password, rol);\n    } else {\n      // login\n      signInWithEmailAndPassword(auth, email, password);\n    }\n  }\n  return (\n    <div>\n      <h1>{isRegistrando ? \"Regístrate\" : \"Inicia sesión\"}</h1>\n\n      <form onSubmit={submitHandler}>\n        <label>\n          Correo electrónico:\n          <input type=\"email\" id=\"email\" />\n        </label>\n\n        <label>\n          Contraseña:\n          <input type=\"password\" id=\"password\" />\n        </label>\n\n        <label>\n          Rol:\n          <select id=\"rol\">\n            <option value=\"admin\">Administrador</option>\n            <option value=\"user\">Usuario</option>\n          </select>\n        </label>\n\n        <input\n          type=\"submit\"\n          value={isRegistrando ? \"Registrar\" : \"Iniciar sesión\"}\n        />\n      </form>\n\n      <button onClick={() => setIsRegistrando(!isRegistrando)}>\n        {isRegistrando ? \"Ya tengo una cuenta\" : \"Quiero registrarme\"}\n      </button>\n    </div>\n\n  );\n}\nexport default Login;*/\n\nimport {auth} from './firebase'\nimport {createUserWithEmailAndPassword} from 'firebase/auth'\n\nconst validatePassword = () => {\n  let isValid = true\n  if (password !== '' && confirmPassword !== ''){\n    if (password !== confirmPassword) {\n      isValid = false\n      setError('Passwords does not match')\n    }\n  }\n  return isValid\n}\n\nconst register = e => {\n  e.preventDefault()\n  setError('')\n  if(validatePassword()) {\n    // Create a new user with email and password using firebase\n      createUserWithEmailAndPassword(auth, email, password)\n      .then((res) => {\n          console.log(res.user)\n        })\n      .catch(err => setError(err.message))\n  }\n  setEmail('')\n  setPassword('')\n  setConfirmPassword('')\n}\n\n<form onSubmit={register} name='registration_form'></form>\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,IAAR,QAAmB,YAAnB;AACA,SAAQC,8BAAR,QAA6C,eAA7C;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAC7B,IAAIC,OAAO,GAAG,IAAd;;EACA,IAAIC,QAAQ,KAAK,EAAb,IAAmBC,eAAe,KAAK,EAA3C,EAA8C;IAC5C,IAAID,QAAQ,KAAKC,eAAjB,EAAkC;MAChCF,OAAO,GAAG,KAAV;MACAG,QAAQ,CAAC,0BAAD,CAAR;IACD;EACF;;EACD,OAAOH,OAAP;AACD,CATD;;AAWA,MAAMI,QAAQ,GAAGC,CAAC,IAAI;EACpBA,CAAC,CAACC,cAAF;EACAH,QAAQ,CAAC,EAAD,CAAR;;EACA,IAAGJ,gBAAgB,EAAnB,EAAuB;IACrB;IACED,8BAA8B,CAACD,IAAD,EAAOU,KAAP,EAAcN,QAAd,CAA9B,CACCO,IADD,CACOC,GAAD,IAAS;MACXC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;IACD,CAHH,EAICC,KAJD,CAIOC,GAAG,IAAIX,QAAQ,CAACW,GAAG,CAACC,OAAL,CAJtB;EAKH;;EACDC,QAAQ,CAAC,EAAD,CAAR;EACAC,WAAW,CAAC,EAAD,CAAX;EACAC,kBAAkB,CAAC,EAAD,CAAlB;AACD,CAdD;;AAgBA;AAAA;EAAM,QAAQ,EAAEd,QAAhB;EAA0B,IAAI,EAAC;AAA/B;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}